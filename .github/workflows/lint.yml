# Run linting action with some custom setup.

name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: read-all
jobs:
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-Linter
        uses: super-linter/super-linter/slim@v7.1.0
        env:
          # Either disable MULTI_STATUS or pass the GITHUB_TOKEN.
          MULTI_STATUS: false
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_MARKDOWN: false
          VALIDATE_MARKDOWN_PRETTIER: false
          # Disabled for conflicts with the isort version used in pre-commit
          #   you can re-enable it if you align your local isort with
          #   the one in the super-linter image.
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_XML: false
          #
          # YAML validation is delegated to pre-commit.
          #
          VALIDATE_YAML: false
          VALIDATE_YAML_PRETTIER: false
          VALIDATE_OPENAPI: false
          VALIDATE_NATURAL_LANGUAGE: false
          #
          # JS/CSS delegated to eslint.
          #
          VALIDATE_CSS: false
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_JAVASCRIPT_STANDARD: false
          VALIDATE_JSON_PRETTIER: false
          VALIDATE_JSON: false
          #
          # TS/TSX delegated to eslint.
          #
          VALIDATE_TSX: false
          VALIDATE_TYPESCRIPT_ES: false
          # JAVASCRIPT_ES_CONFIG_FILE: eslint.config.mjs
          VALIDATE_TYPESCRIPT_STANDARD: false
          # TYPESCRIPT_ES_CONFIG_FILE: eslint.config.mjs
          VALIDATE_JSCPD: false  # Disable copy-paste detection.

  pre-commit:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: python:3.9
    steps:
      - uses: actions/checkout@v4

      - name: Run commit hooks.
        run: |
          pip3 --no-cache-dir install pre-commit
          git --version
          pwd
          ls -la
          id
          git config --global --add safe.directory "$PWD"
          pre-commit install
          pre-commit run -a

      # Store (expiring) logs on failure.
      # Retrieve artifacts via `gh run download`.
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: pre-commit.log
          path: /github/home/.cache/pre-commit/pre-commit.log
          retention-days: 5
